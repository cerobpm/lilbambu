if(is.na(params$TimeUnitName)) {
TimeUnitsID=352
} else {
TimeUnitsID=system(paste('lilbambu GetUnitsID UnitsName="',params$TimeUnitName,'" UnitsType=Time',sep=''), intern = TRUE)
}
TimeSupport =  if (!is.na(params$TimeSupport)) params$TimeSupport else 0
str = paste('VariableCode="',params$FullVariableCode,'" VariableName="',params$VariableName,'" VariableUnitsID=',params$VariableUnitsID,' DataType="',DataType,'" ValueType="',ValueType,'" GeneralCategory="',GeneralCategory,'" SampleMedium="',SampleMedium,'" NoDataValue=',NoDataValue,' IsRegular=',IsRegular,' TimeUnitsID=',TimeUnitsID,' TimeSupport=',TimeSupport,upd_opt,sep='')
result<-system(paste("lilbambu addVariable ",str,sep=''), intern = TRUE)
status<-jsonlite::fromJSON(result)$status
if(status != '200 OK') {
return("nothing inserted / updated")
} else {
return(paste("1 row inserted or updated. VariableID:",jsonlite::fromJSON(result)$VariableID,sep=''))
}
}
harvestVariables <-function(url,update=FALSE)
{
variables<-GetVariables(url)
results=data.frame
for (i in 1:length(variables[,1]))
{
result<-addVariablestoLocal(variables[i,],update)
results[i]=result
}
return(results)
}
sites<-GetSites(url)
sites<-GetSites(url)
extra_columns=c("Elevation","State","County","Comments")
for(i in extra_columns) {
i
}
params[i]
i
params[[i]]
extra_columns_str=''
for(i in extra_columns) {
if(!is.na(params[[i]])) {
extra_columns_str = paste(extra_columns_str,' ',i,'="',params[[i]],'"',sep='')
}
}
params[[i]]
params
i
url="http://10.10.9.14:8080/wml/GetSites"
sites<-GetSites(url)
sites
addSitetoLocal<-function(params,update=FALSE) {
upd_opt = if (update==TRUE) " -U " else ""
extra_columns=c("Elevation","State","County","Comments")
extra_columns_str=''
for(i in extra_columns) {
if(!is.na(params[[i]])) {
extra_columns_str = paste(extra_columns_str,' ',i,'="',params[[i]],'"',sep='')
}
}
str = paste('SiteCode="',params$FullSiteCode,'" SiteName="',params$SiteName,' Latitude=',params$Latitude,' Longitude=',params$Longitude,upd_opt,sep='')
result<-system(paste("lilbambu addSite ",str,sep=''), intern = TRUE)
status<-jsonlite::fromJSON(result)$status
if(status != '200 OK') {
return("nothing inserted / updated")
} else {
return(paste("1 row inserted or updated. SiteID:",jsonlite::fromJSON(result)$SiteID,sep=''))
}
}
addSitetoLocal(sites[1,],TRUE)
params=sites[1,]
params
upd_opt
extra_columns=c("Elevation","State","County","Comments")
extra_columns_str=''
for(i in extra_columns) {
if(!is.na(params[[i]])) {
extra_columns_str = paste(extra_columns_str,' ',i,'="',params[[i]],'"',sep='')
}
}
extra_columns_str
str = paste('SiteCode="',params$FullSiteCode,'" SiteName="',params$SiteName,' Latitude=',params$Latitude,' Longitude=',params$Longitude,extra_columns_str,upd_opt,sep='')
str
str = paste('SiteCode="',params$FullSiteCode,'" SiteName="',params$SiteName,'" Latitude=',params$Latitude,' Longitude=',params$Longitude,extra_columns_str,upd_opt,sep='')
str
result<-system(paste("lilbambu addSite ",str,sep=''), intern = TRUE)
result
url
url="http://brasilia.essi-lab.eu/gi-axe/services/cuahsi_1_1.asmx?WSDL"
SiteCode='INA:2'
siteinfo<-GetSiteInfo(url,SiteCode)
library(WaterML)
siteinfo<-GetSiteInfo(url,SiteCode)
SiteCode='INA:alturas_prefe:2'
siteinfo<-GetSiteInfo(url,SiteCode)
SiteCode='alturas_prefe:2'
siteinfo<-GetSiteInfo(url,SiteCode)
sites<-GetSites(url,north=-32,south=-35,east=-55,west=-61)
sites
results=data.frame
for (i in 1:length(sites[,1]))
{
result<-addSitetoLocal(sites[i,],update)
results[i]=result
}
addSitetoLocal<-function(params,update=FALSE) {
upd_opt = if (update==TRUE) " -U " else ""
extra_columns=c("Elevation","State","County","Comments")
extra_columns_str=''
for(i in extra_columns) {
if(!is.na(params[[i]])) {
extra_columns_str = paste(extra_columns_str,' ',i,'="',params[[i]],'"',sep='')
}
}
str = paste('SiteCode="',params$FullSiteCode,'" SiteName="',params$SiteName,'" Latitude=',params$Latitude,' Longitude=',params$Longitude,extra_columns_str,upd_opt,sep='')
result<-system(paste("lilbambu addSite ",str,sep=''), intern = TRUE)
status<-jsonlite::fromJSON(result)$status
if(status != '200 OK') {
return("nothing inserted / updated")
} else {
return(paste("1 row inserted or updated. SiteID:",jsonlite::fromJSON(result)$SiteID,sep=''))
}
}
library(jsonlite)
for (i in 1:length(sites[,1]))
{
result<-addSitetoLocal(sites[i,],update)
results[i]=result
}
update=TRUE
for (i in 1:length(sites[,1]))
{
result<-addSitetoLocal(sites[i,],update)
results[i]=result
}
result
results
for (i in 1:length(sites[,1]))
{
result<-addSitetoLocal(sites[i,],update)
res=c(res,result)
}
res=c()
for (i in 1:length(sites[,1]))
{
result<-addSitetoLocal(sites[i,],update)
res=c(res,result)
}
addSitetoLocal<-function(params,update=FALSE) {
upd_opt = if (update==TRUE) " -U " else ""
extra_columns=c("Elevation","State","County","Comments")
extra_columns_str=''
for(i in extra_columns) {
if(!is.na(params[[i]])) {
colname= if (i=="Elevation") "Elevation_m" else i
extra_columns_str = paste(extra_columns_str,' ',colname,'="',params[[i]],'"',sep='')
}
}
str = paste('SiteCode="',params$FullSiteCode,'" SiteName="',params$SiteName,'" Latitude=',params$Latitude,' Longitude=',params$Longitude,extra_columns_str,upd_opt,sep='')
result<-system(paste("lilbambu addSite ",str,sep=''), intern = TRUE)
status<-jsonlite::fromJSON(result)$status
if(status != '200 OK') {
return("nothing inserted / updated")
} else {
return(paste("1 row inserted or updated. SiteID:",jsonlite::fromJSON(result)$SiteID,sep=''))
}
}
for (i in 1:length(sites[,1]))
{
result<-addSitetoLocal(sites[i,],update)
res=c(res,result)
}
res
SiteCode="emas:emas:924@477440475"
siteinfo<-GetSiteInfo(url,SiteCode)
siteinfo
View(siteinfo)
addSeriestoLocal<-function(params,update=FALSE) {
upd_opt = if (update==TRUE) " -U " else ""
extra_columns=c("MethodCode","MethodDescription","MethodLink","Organization","SourceDescription","citation","qualityControlLevelCode","qualityControlLevelDefinition","valueCount","beginDateTime","endDateTime","beginDateTimeUTC","endDateTimeUTC")
extra_columns_str=''
for(i in extra_columns) {
if(!is.na(params[[i]])) {
extra_columns_str = paste(extra_columns_str,' ',i,'="',params[[i]],'"',sep='')
}
}
str = paste('SiteCode="',params$FullSiteCode,'" VariableCode="',params$fullVariableCode,"'",extra_columns_str,upd_opt,sep='')
result<-system(paste("lilbambu addSeries ",str,sep=''), intern = TRUE)
status<-jsonlite::fromJSON(result)$status
if(status != '200 OK') {
return("nothing inserted / updated")
} else {
return(paste("1 row inserted or updated. SeriesID:",jsonlite::fromJSON(result)$SeriesID,sep=''))
}
}
View(addSeriestoLocal)
siteinfo
siteinfo[1,]
addSeriestoLocal(siteinfo[1,],TRUE)
addSeriestoLocal<-function(params,update=FALSE) {
upd_opt = if (update==TRUE) " -U " else ""
extra_columns=c("methodCode","methodDescription","methodLink","Organization","sourceDescription","citation","qualityControlLevelCode","qualityControlLevelDefinition","valueCount","beginDateTime","endDateTime","beginDateTimeUTC","endDateTimeUTC")
extra_columns_str=''
for(i in extra_columns) {
if(!is.na(params[[i]])) {
extra_columns_str = paste(extra_columns_str,' ',i,'="',params[[i]],'"',sep='')
}
}
str = paste('SiteCode="',params$FullSiteCode,'" VariableCode="',params$fullVariableCode,"'",extra_columns_str,upd_opt,sep='')
result<-system(paste("lilbambu addSeries ",str,sep=''), intern = TRUE)
status<-jsonlite::fromJSON(result)$status
if(status != '200 OK') {
return("nothing inserted / updated")
} else {
return(paste("1 row inserted or updated. SeriesID:",jsonlite::fromJSON(result)$SeriesID,sep=''))
}
}
addSeriestoLocal(siteinfo[1,],TRUE)
params=siteinfo[1,]
params
params$methodCode
params$methodDescription
params$methodLink
params$Organization
params$Organizatioadasd
params$organization
params$sourceDescription
params
update=TRUE
upd_opt = if (update==TRUE) " -U " else ""
extra_columns=c("methodCode","methodDescription","methodLink","organization","sourceDescription","citation","qualityControlLevelCode","qualityControlLevelDefinition","valueCount","beginDateTime","endDateTime","beginDateTimeUTC","endDateTimeUTC")
extra_columns_str=''
for(i in extra_columns) {
if(!is.na(params[[i]])) {
extra_columns_str = paste(extra_columns_str,' ',i,'="',params[[i]],'"',sep='')
}
}
str = paste('SiteCode="',params$FullSiteCode,'" VariableCode="',params$fullVariableCode,"'",extra_columns_str,upd_opt,sep='')
str
str = paste('SiteCode="',params$FullSiteCode,'VariableCode="',params$fullVariableCode,'"',extra_columns_str,upd_opt,sep='')
str
str = paste('SiteCode="',params$FullSiteCode,' VariableCode="',params$fullVariableCode,'"',extra_columns_str,upd_opt,sep='')
str
str = paste('SiteCode="',params$FullSiteCode,'" VariableCode="',params$fullVariableCode,'"',extra_columns_str,upd_opt,sep='')
str
extra_columns_str=''
for(i in extra_columns) {
if(!is.na(params[[i]])) {
if(params[[i]] != '') {
extra_columns_str = paste(extra_columns_str,' ',i,'="',params[[i]],'"',sep='')
}
}
}
params
i=methodCode
i="methodCode"
if(!is.na(params[[i]])) {
if(params[[i]] != '') {
extra_columns_str = paste(extra_columns_str,' ',i,'="',params[[i]],'"',sep='')
}
}
extra_columns_str
extra_columns=c("methodCode","methodDescription","methodLink","organization","sourceDescription","citation","qualityControlLevelCode","qualityControlLevelDefinition","valueCount","beginDateTime","endDateTime","beginDateTimeUTC","endDateTimeUTC")
extra_columns_str=''
for(i in extra_columns) {
if(!is.na(params[[i]])) {
if(params[[i]] != '') {
extra_columns_str = paste(extra_columns_str,' ',i,'="',params[[i]],'"',sep='')
}
}
}
extra_columns_str=''
for(i in extra_columns) {
if(!is.na(params[[i]])) {
if(!params[[i]] == '') {
extra_columns_str = paste(extra_columns_str,' ',i,'="',params[[i]],'"',sep='')
}
}
}
params[[i]]
params[[i]] == ''
as.string(params[[i]]) == ''
toString(params[[i]]) == ''
extra_columns_str=''
for(i in extra_columns) {
if(!is.na(params[[i]])) {
if(!toString(params[[i]]) == '') {
extra_columns_str = paste(extra_columns_str,' ',i,'="',params[[i]],'"',sep='')
}
}
}
extra_columns_str
str = paste('SiteCode="',params$FullSiteCode,'" VariableCode="',params$fullVariableCode,'"',extra_columns_str,upd_opt,sep='')
str
result<-system(paste("lilbambu addSeries ",str,sep=''), intern = TRUE)
result<-system(paste("lilbambu addSeries ",str,sep=''), intern = TRUE)
result<-system(paste("lilbambu addSeries ",str,sep=''), intern = TRUE)
result<-system(paste("lilbambu addSeries ",str,sep=''), intern = TRUE)
result<-system(paste("lilbambu addSeries ",str,sep=''), intern = TRUE)
result<-system(paste("lilbambu addSeries ",str,sep=''), intern = TRUE)
result<-system(paste("lilbambu addSeries ",str,sep=''), intern = TRUE)
extra_columns_str
params
str = paste('SiteCode="',params$FullSiteCode,'" VariableCode="',params$FullVariableCode,'"',extra_columns_str,upd_opt,sep='')
result<-system(paste("lilbambu addSeries ",str,sep=''), intern = TRUE)
extra_columns_str=''
for(i in extra_columns) {
if(!is.na(params[[i]])) {
if(!toString(params[[i]]) == '') {
colname = paste(toupper(substr(i, 1, 1)), substr(i, 2, nchar(i)), sep="")
extra_columns_str = paste(extra_columns_str,' ',colname,'="',params[[i]],'"',sep='')
}
}
}
str = paste('SiteCode="',params$FullSiteCode,'" VariableCode="',params$FullVariableCode,'"',extra_columns_str,upd_opt,sep='')
str
result<-system(paste("lilbambu addSeries ",str,sep=''), intern = TRUE)
params$SiteCode
# GET SiteID #
site<-system(paste("lilbambu GetSiteInfo SiteCode=",params$SiteCode,sep=''),intern=TRUE)
site
# GET SiteID #
site<-system(paste("lilbambu GetSiteInfo SiteCode=",params$FullSiteCode,sep=''),intern=TRUE)
site
paste("lilbambu GetSiteInfo SiteCode=",params$FullSiteCode,sep='')
result<-system(paste("lilbambu addSeries ",str,sep=''), intern = TRUE)
result<-system(paste("lilbambu addSeries ",str,sep=''), intern = TRUE)
result<-system(paste("lilbambu addSeries ",str,sep=''), intern = TRUE)
result
str
addSeriestoLocal<-function(params,update=FALSE) {
upd_opt = if (update==TRUE) " -U " else ""
# GET SiteID #
extra_columns=c("methodCode","methodDescription","methodLink","organization","sourceDescription","citation","qualityControlLevelCode","qualityControlLevelDefinition","valueCount","beginDateTime","endDateTime","beginDateTimeUTC","endDateTimeUTC")
extra_columns_str=''
for(i in extra_columns) {
if(!is.na(params[[i]])) {
if(!toString(params[[i]]) == '') {
colname = paste(toupper(substr(i, 1, 1)), substr(i, 2, nchar(i)), sep="")
extra_columns_str = paste(extra_columns_str,' ',colname,'="',params[[i]],'"',sep='')
}
}
}
str = paste('SiteCode="',params$FullSiteCode,'" VariableCode="',params$FullVariableCode,'"',extra_columns_str,upd_opt,sep='')
result<-system(paste("lilbambu addSeries ",str,sep=''), intern = TRUE)
status<-jsonlite::fromJSON(result)$status
if(status != '200 OK') {
return("nothing inserted / updated")
} else {
return(paste("1 row inserted or updated. SeriesID:",jsonlite::fromJSON(result)$SeriesID,sep=''))
}
}
siteinfo
SiteCode
sites
sites$SiteCode
harvestSeriesCatalog <-function(url,SiteCode,update=FALSE)
{
siteinfo<-GetSiteInfo(url,SiteCode)
results=data.frame
for (i in 1:length(siteinfo[,1]))
{
result<-addSeriestoLocal(seriesinfo[i,],update)
results[i]=result
}
return(results)
}
harvestSeriesCatalog(url,sites$SiteCode[2],TRUE)
harvestSeriesCatalog <-function(url,SiteCode,update=FALSE)
{
siteinfo<-GetSiteInfo(url,SiteCode)
results=data.frame
for (i in 1:length(siteinfo[,1]))
{
result<-addSeriestoLocal(siteinfo[i,],update)
results[i]=result
}
return(results)
}
siteinfo<-GetSiteInfo(url,sites$SiteCode[2])
siteinfo
result<-addSeriestoLocal(siteinfo[1,],TRUE)
result
harvestSeriesCatalog <-function(url,SiteCode,update=FALSE)
{
siteinfo<-GetSiteInfo(url,SiteCode)
results=data.frame
for (i in 1:length(siteinfo[,1]))
{
result<-addSeriestoLocal(siteinfo[i,],update)
results[i]=result
}
return(results)
}
sites$SiteCode
for (i in sites$SiteCode) { harvestSeriesCatalog(url,i,TRUE)}
for (i in sites$SiteCode) { harvestSeriesCatalog(url,i,TRUE)}
harvestSeriesCatalog <-function(url,SiteCode,update=FALSE)
{
siteinfo<-GetSiteInfo(url,SiteCode)
results=c()
for (i in 1:length(siteinfo[,1]))
{
result<-addSeriestoLocal(siteinfo[i,],update)
results=c(results,result)
}
return(results)
}
for (i in sites$SiteCode) { harvestSeriesCatalog(url,i,TRUE)}
library(roxygen2)
library(devtools)
setwd("~/lilbambu/lib/R")
document()
document("lilbambu.R")
setwd('~/lilbambu/lib/R')
document("lilbambu.R")
document("lilbambu")
document()
document("lilbambu/")
document()
setwd("~/lilbambu/lib/R")
document()
build()
setwd("~/lilbambu/lib/R/packages")
create("lilbambu")
setwd("lilbambu")
document()
setwd(..)
setwd("..")
install("lilbambu")
siteinfo$beginDateTime
toString(siteinfo$beginDateTime)
setwd("~/lilbambu/lib/R/packages/lilbambu/R")
setwd("~/lilbambu/lib/R/packages")
setwd("~/lilbambu/lib/R/packages/lilbambu")
document()
document()
setwd("..")
install()
setwd("~/lilbambu/lib/R/packages")
install()
install("lilbambu")
sites
sites[SiteCode~'hsl-ur']
sites[SiteCode=~'hsl-ur']
subset(sites,grepl("hsl-ur",SiteCode))
urusites=subset(sites,grepl("hsl-ur",SiteCode))
#for(i in urusites$SiteCode) { harvestSeriesCatalog(url,i,TRUE)}
urusites[1]$SiteCode
urusites$SiteCode[1]
harvestSeriesCatalog(url,urusites$SiteCode[1],TRUE)
siteinfo<-GetSiteInfo(url,urusites$SiteCode[1])
siteinfo
addSeriestoLocal<-function(params,update=FALSE) {
upd_opt = if (update==TRUE) " -U " else ""
# GET SiteID #
extra_columns=c("methodCode","methodDescription","methodLink","organization","sourceDescription","citation","qualityControlLevelCode","qualityControlLevelDefinition","valueCount","beginDateTime","endDateTime","beginDateTimeUTC","endDateTimeUTC")
extra_columns_str=''
for(i in extra_columns) {
if(!is.na(params[[i]])) {
if(!toString(params[[i]]) == '') {
colname = paste(toupper(substr(i, 1, 1)), substr(i, 2, nchar(i)), sep="")
extra_columns_str = paste(extra_columns_str,' ',colname,'="',params[[i]],'"',sep='')
}
}
}
stmt = paste('lilbambu addSeries SiteCode="',params$FullSiteCode,'" VariableCode="',params$FullVariableCode,'"',extra_columns_str,upd_opt,sep='')
write(stmt, stderr())
result<-system(stmt, intern = TRUE)
status<-jsonlite::fromJSON(result)$status
if(status != '200 OK') {
return("nothing inserted / updated")
} else {
return(paste("1 row inserted or updated. SeriesID:",jsonlite::fromJSON(result)$SeriesID,sep=''))
}
}
addSeriestoLocal(siteinfo,TRUE)
for(i in urusites$SiteCode) { harvestSeriesCatalog(url,i,TRUE)}
addSeriestoLocal<-function(params,update=FALSE) {
upd_opt = if (update==TRUE) " -U " else ""
# GET SiteID #
extra_columns=c("methodCode","methodDescription","methodLink","organization","sourceDescription","citation","qualityControlLevelCode","qualityControlLevelDefinition","valueCount","beginDateTime","endDateTime","beginDateTimeUTC","endDateTimeUTC")
extra_columns_str=''
for(i in extra_columns) {
if(!is.na(params[[i]])) {
if(!toString(params[[i]]) == '') {
colname = paste(toupper(substr(i, 1, 1)), substr(i, 2, nchar(i)), sep="")
extra_columns_str = paste(extra_columns_str,' ',colname,'="',params[[i]],'"',sep='')
}
}
}
stmt = paste('lilbambu addSeries SiteCode="',params$FullSiteCode,'" VariableCode="',params$FullVariableCode,'"',extra_columns_str,upd_opt,sep='')
# write(stmt, stderr())
result<-system(stmt, intern = TRUE)
status<-jsonlite::fromJSON(result)$status
if(status != '200 OK') {
return("nothing inserted / updated")
} else {
return(paste("1 row inserted or updated. SeriesID:",jsonlite::fromJSON(result)$SeriesID,sep=''))
}
}
sitesbra<-GetSites(url,north=-10,south=-25,east=-40,west=-60)
sitesbra<-GetSites(url,north=-10,south=-20,east=-40,west=-50)
sitesbra<-GetSites(url,north=-10,south=-20,east=-40,west=-50)
View(sitesbra)
for(i in 1:length(sitesbra[,1])) { addSitetoLocal(sitesbra[i,])}
for(i in sitesbra$SiteCode) {
write i
}
for(i in sitesbra$SiteCode) {
write(i)
harvestSeriesCatalog(url,i,TRUE) }
values<-GetValues(url,SiteCode="ANA:ANA:55510950@1613412505",VariableCode="ODM:Nivel",startDate="2014-06-08 00:00:00",endDate="2018-06-18 23:30:00")
values<-GetValues(url,siteCode="ANA:ANA:55510950@1613412505",variableCode="ODM:Nivel",startDate="2014-06-08 00:00:00",endDate="2018-06-18 23:30:00")
values<-GetValues(url,siteCode="ANA:ANA:55510950@1613412505",variableCode="ODM:Nivel",startDate="2014-06-08",endDate="2018-06-18")
siteinfo
